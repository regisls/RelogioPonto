<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="AppIcone.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>121, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AppIcone.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAbGwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAGs1JREFUeJzt3QdUV2e2NvBkZtZ3142TfOve77t3ajKTyeRmkpn0prFr
        bIklxt5AwQ5W7KKiogKK2BWkI1KkiigCiihKBAsCplgyicaJJpmSNuNkkvvc/RxEwYBRk9yTWT6/tfbi
        7znv++79nrX2e/6k3nabiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiMgtAEBt3G7xvSLgB6u2n/yXTSVn75ia+27TiVnnxo5LPxvp
        m3bmkE/amYsW+I7HRdbKmidmnBs7NevdpuFvfP6vqceP/59U4PsBAfjebTV7dfYtcku71Pjfz/kD7kgt
        e+/HGa9+/Luog38euLjgQvXiwgsI3nUBIbvOI2Q348I/RQRbvaw7yCIw/zwW7jxfGfXKH3tmVv3lvsRK
        /BsPOB52tvvb3X7+Iq7iW5BvRb4ht5/8413Ts9/xm5J15pMZW89iTu47mLf9XQTsOIf5Oy3y/vBPElar
        1Tx3+zn4557DtOyzmJj+1sfTss9M5EFXVIQfXDr43H78Iu6q81X49uGbT222wPDE0xix+VIkncZIhl3/
        p4ok1n7K9nDK2Yd34il4c2+2xzq/9rj9+EXcVdsIXgknvCxwi4SXDgCR22oOgKFxr99t8aEFbpHgXu/W
        ASC3PM/Y1263KLDAtxlDbzC+7Xou7Vl/EVBubUOijz9mgW8jPOpGzJXwbCTqjqk799uqj3t3+/mLuGpw
        VJW3Bb6pGFI3oqusgaud8IypiaG1EXtVXLpeO652Hteou+Y3WSv37vbzF3HVwI3H1lvg68aguhF5DIMj
        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
        Gi3Gr0PbyeHoNC0SL86MxkvW1C/bG713QILT5Ax+5jXe4xiO5RzO5Rpci2s6jW85mIs5mbu2jpvdh9vP
        X8RVP+294KIFbjZ+1mcBft5noTXjQtzTL9Cac5E16RI8MCQYDw1dike8Q/HEyDA8M2YlmvmsRsvxa9F6
        gh0Kk9aj3eQNTvAzr/Eex3As53Au1+BaXJNrMwdzMSdzf53auXe3n7+Iq378ckCZBb5O/KRXTfy013z8
        rPd83G2NeU+/hbiXh8HAxfivwUvwGw8eCCF42GspHvVehseGh9YLXuM9juFYzuHce52mX+isybWZozbf
        162be3f7+Yu46kcvzV1vga8bP+4573L8xOKn1mA/t2b9uTXtPda8v7C39r39A/Eri/usqX89cBHutwZn
        8DOv8R7HcCzncC7X4Fo/qbM+45uomXt3+/mLuOo/evh7W+Cbiv98ac7l+JHFj3vOdeInL8+1Rp6Hn/W6
        FL0D6sel6xzDsbXzflRnPcY3WSv37vbzF3HV/+826zELfBvxH91nX47/rBM/suZrKOqOqTv326qPe3f7
        +Yu46t9fnHG7RYEFvs34f11n3lB82/Vc2vPtbj9/EVcBuO3fXph+t8WHFrhFgnu9m3sXuaWxCRj/t/NU
        LwvUi078OcV+MvxwlxOTv8Ph59Tp1OvUfdV+roRX7b5FbmnWBN9LTU39flFR0Q+seZLv6mhN3oExGXd2
        mIg724/DnW19LMbizjZjvtvRdgzuYp3tfHFX+wm48/lJto9Jzl6cfXV0Dohk7pV75t7dfv4irsrOzv5p
        YmLi/dYQD6elpT31tMe8QGuaT5q0G4cm1kxNWo1AkxbDcMdznrij2ZDvcHjU/LQ6m7TwQpPWo/DDdj5o
        YgfBD+0gu6vj5E+e9gwI5B65V+6Ze3f7+Yu4asuWLT1SUlLG288ga44I+5m4fEPM9gf7zHyvSRseACNx
        R3Nva6zaQ2Cohed3MIY60aS51dnC2+oeBaf+duPxUP/ZF1aEx+ba/hIv7THo0p57uP38RVxljdDLGsHP
        GiPUfsba2zHNIjsxKTl3zrL1JQP8gqubecw++4tukz/8YZsxX/xrq9H4LscP24z94pfdJ/+l+VD/M4Om
        Laucv2LjvuTklG22t2zujXu8tFc/7t3t5y8iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8r/hfwAPgLAucqmn4wAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>